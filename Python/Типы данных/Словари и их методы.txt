Словарь (dict) является встроенным изменяемым типом данных в python. Этот тип данных является отображением. Отображения хранят данные не по ключам (индексам как list), а по соответствию ключу (хэш- таблица).

map1[1] -> вернет значение, хранящееся в словаре map1 по ключу 1. Индексация в словарях происходит по ключам

map1[1] = 2 -> ничего не вернет. В словаре map1 по ключу 1 будет храниться значение 2, либо им будет заменено предыдущее значение, либо в словаре map1 создатся новая пара ключ- значение

Если обратиться к несуществующему ключу в словаре -> возникнет KeyError

dict(val1 = 1, val2 = 2) -> вернет словарь, со следующими парами: val1 : 1, val2 : 2. Причем, такая запись не позволяет назначить целочисленному ключу 1 значение 2 (1 : 2)

dict(zip([1, 2, 3], [7, 7, 7])) -> вернет словарь с ключами 1 : 7, 2 : 7, 3 : 7. Причем в новых версиях python порядок будет сохранен

2 in map1 -> вернет True или False в зависимости от того, содержит ли словарь map1 ключ 2

map1.get(1) -> вернет значение, отображаемое на ключ 1, если оно есть, иначе вернет None. Если передать что- то в параметр default, то вернется этот самый default

map1.keys() -> вернет тип dict_keys, по которому можно итерироваться. Если привести этот dict_keys к списку- можно получить список ключей

map1.clear() -> ничего не возвращает, очищает словарь map1

map1.copy() -> возвращает копию словаря (то есть аллоцируети в памяти новый словарь и дает на него ссылку)

dict.fromkeys(list1) -> возвращает словарь с ключами из list1 и значениями None. Можно вставить иное значение, если передать дополнительно этот параметр. А в принципе, в качестве главного параметра должно прилетать то, по чему можно итерироваться





