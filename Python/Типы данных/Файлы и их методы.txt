Файлы являются встроенным типом данных в python, так утверждает Лутц, а помимо этого работа с ними возможна без сторонних библиотек. Так что с ним можно согласиться.

file.open('file1.txt') -> вернет ссылку на экземпляр класса TextIOWrapper, представляющий собой класс для работы с файлом
file.open('file1.txt', 'w') -> откроет файл на запись, если файла нет, то создаст таковой. А еще и перезапишет существующий файл
file.open('file1.txt', 'a') -> откроет файл в режиме дозаписи. По всей видимости 'a' означает английское слово 'append'
file.open('file1.txt', 'r') -> откроет файл на чтение. В таком режиме открывается файл по умолчанию. Если такого файла нет, то это приведет к возникновению FileNotFoundError

# по файлу можно итерироваться, считывая его построчно через for line in my_file, к сожалению, данный способ не позволяет сэкономить оперативную память
# для экономии оперативной памяти, файл можно считывать построчно, после того, как объект- обертка для файла был объявлен, можно вызвать у обертки метод readline(i), где i - номер строки для чтения, в таком случае из файла прочитается только одна строка

file.open('file1.txt', 'rb') -> откроет файл в режиме байтового чтения, это позволяет читать сырые байты из файла

