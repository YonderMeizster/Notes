Оператор nonlocal позволяет обратиться к переменной из обрамляющей функции.
Например:
def fun1():
    x = 5
    def fun2():
        nonlocal x
        x = 6
    fun2()
    print(x) -> 6

В отличие от global, оператор nonlocal должен применяться в тот момент, когда целевая переменная уже определена.

Оператор nonlocal может применяться как с одной, так и с несколькмим переменными:

nonlocal a | nonlocal a, b, c

Применяя оператор nonlocal можно пристыковать к возвращаемой подфункции кусок области видимости, в котором будут перечсленные при применении оператора переменные. А это значит, что через возвращаемую функцию можно их менять, даже при условии того, что изначальная функция обертка уже не доступна и скорее всего была удалена к чертям сборщиком мусора.

Также nonlocal может быть использован внутри вложенных-вложенных и так далее функций:

def fun1():
    x = 5
    def fun2():
        def fun3():
            nonlocal x
            x = 6
        fun3()
    fun2()
    print(x) -> 6